{"componentChunkName":"component---src-templates-docs-tsx","path":"/blog/use-eslint-typescript-cn","webpackCompilationHash":"ddb134439a54b8ba43e8","result":{"data":{"markdownRemark":{"html":"<p>在 TypeScript 中我们一直使用 tslint 来对我们的代码质量进行保障。但是 tslint 是 eslint 的子集。tslint 大概提供了 151 条基础规则，eslint 却有  249 条，更不用说 eslint 发达的生态了，提供了更多的规范代码。tslint 团队也发现了这个问题，并且决定<a href=\"https://eslint.org/blog/2019/01/future-typescript-eslint\">转移</a>到 eslint 中。</p>\n<h2 id=\"起因\">起因<a href=\"#%E8%B5%B7%E5%9B%A0\" aria-hidden class=\"anchor\">#</a></h2>\n<p>在 Pro v4 的筹备中，我们增加了一个将 TypeScript 转化为 JavaScript 的 功能，转化完成之后我们跑了一遍 eslint 和 prettier 来让代码更像是人写的。结果转化完成之后的 js 代码无法通过 eslint 的检查:</p>\n<p>比如这里：</p>\n<p><img src=\"https://user-images.githubusercontent.com/8186664/59903736-55311100-9434-11e9-99b0-8406d5b56b97.png\" alt=\"image\"></p>\n<p>还有这里：</p>\n<p><img src=\"https://user-images.githubusercontent.com/8186664/59903712-4185aa80-9434-11e9-84fd-4cf2ff3ec0ca.png\" alt=\"image\"></p>\n<h2 id=\"结果\">结果<a href=\"#%E7%BB%93%E6%9E%9C\" aria-hidden class=\"anchor\">#</a></h2>\n<p>如果我们使用的是 eslint，这些问题应该会直接暴露。于是开始进行了调研和使用。首先在 Pro 中尝试了一把。效果很不错，具体可以看这个 <a href=\"https://github.com/ant-design/ant-design-pro/pull/4336\">PR</a>。一鼓作气我在<a href=\"https://github.com/ant-design/pro-blocks/pull/28\">pro-blocks</a> 中也加入了这个 lint。</p>\n<p>我们将这些规则发布成了一个包   🌟🌟<strong>umi-fabric</strong> 🌟🌟, 这个库提供了 eslint ，stylelint 和 prettier 的一些预设，非常适合所有人使用。所有打开的规则都是对提升代码质量有意义的。</p>\n<h2 id=\"使用\">使用<a href=\"#%E4%BD%BF%E7%94%A8\" aria-hidden class=\"anchor\">#</a></h2>\n<p><strong>umi-fabric</strong> 的使用非常简单。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> eslint @umijs/fabric -save-dev</code></pre></div>\n<p>并且在根目录 <code>.eslintrc.js</code>  中做如下配置。</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> fabric <span class=\"token operator\">=</span> <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@umijs/fabric'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">module</span><span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> fabric<span class=\"token punctuation\">.</span>eslint<span class=\"token punctuation\">;</span></code></pre></div>\n<p>在 vscode 中 eslint 的插件并不会默认的去 lint .ts 文件，我们需要在 <code>settings.json</code>  中设置</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">  <span class=\"token string\">\"eslint.validate\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"javascript\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"javascriptreact\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"typescript\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"typescriptreact\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>接下来就可以愉快的使用了。使用 <code>eslint fix</code>  一下老的 ts 代码有奇效哦。</p>","tableOfContents":"<ul>\n<li><a href=\"/blog/use-eslint-typescript-cn/#%E8%B5%B7%E5%9B%A0\">起因</a></li>\n<li><a href=\"/blog/use-eslint-typescript-cn/#%E7%BB%93%E6%9E%9C\">结果</a></li>\n<li><a href=\"/blog/use-eslint-typescript-cn/#%E4%BD%BF%E7%94%A8\">使用</a></li>\n</ul>","frontmatter":{"title":{"zh_CN":"一起来用 eslint 吧","en_US":"一起来用 eslint 吧"},"order":1,"type":"Blog"},"fields":{"path":"\\blog\\use-eslint-typescript.zh-CN.md","slug":"/blog/use-eslint-typescript-cn","modifiedTime":1565564489144,"avatarList":[{"href":"/chenshuai2144","text":"\n        chenshuai2144\n","src":"https://avatars1.githubusercontent.com/u/8186664?s=40&amp;v=4"}]}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":{"zh_CN":"一起来用 eslint 吧","en_US":"一起来用 eslint 吧"},"order":1,"type":"Blog","time":"2019-06-21T00:00:00.000Z"},"fields":{"slug":"/blog/use-eslint-typescript-cn","path":"\\blog\\use-eslint-typescript.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Let's use eslint","en_US":"Let's use eslint"},"order":1,"type":"Blog","time":"2019-06-21T00:00:00.000Z"},"fields":{"slug":"/blog/use-eslint-typescript","path":"\\blog\\use-eslint-typescript.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Pro 的 Layout 组件","en_US":"Pro 的 Layout 组件"},"order":1,"type":"Blog","time":"2019-05-08T00:00:00.000Z"},"fields":{"slug":"/blog/new-pro-use-cn","path":"\\blog\\new-pro-use.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Layout component of Ant Design Pro","en_US":"Layout component of Ant Design Pro"},"order":1,"type":"Blog","time":"2019-05-08T00:00:00.000Z"},"fields":{"slug":"/blog/new-pro-use","path":"\\blog\\new-pro-use.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"在线更换主题","en_US":"在线更换主题"},"order":1,"type":"Blog","time":"2019-05-07T00:00:00.000Z"},"fields":{"slug":"/blog/change-theme-cn","path":"\\blog\\change-theme.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Customize theme on runtime","en_US":"Customize theme on runtime"},"order":1,"type":"Blog","time":"2019-05-07T00:00:00.000Z"},"fields":{"slug":"/blog/change-theme","path":"\\blog\\change-theme.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Block 新升级","en_US":"Block 新升级"},"order":5,"type":"Blog","time":"2019-06-28T00:00:00.000Z"},"fields":{"slug":"/blog/better-block-cn","path":"\\blog\\better-block.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Better Block","en_US":"Better Block"},"order":5,"type":"Blog","time":"2019-06-28T00:00:00.000Z"},"fields":{"slug":"/blog/better-block","path":"\\blog\\better-block.en-US.md"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/blog/use-eslint-typescript-cn","type":"/blog/"}}}