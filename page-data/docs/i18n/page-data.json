{"componentChunkName":"component---src-templates-docs-tsx","path":"/docs/i18n","webpackCompilationHash":"ddb134439a54b8ba43e8","result":{"data":{"markdownRemark":{"html":"<h3 id=\"getting-started\">Getting Started<a href=\"#getting-started\" aria-hidden class=\"anchor\">#</a></h3>\n<p>Pro implements globalization through the umi plugin <a href=\"https://github.com/umijs/umi-plugin-locale\">umi-plugin-locale</a> and is enabled by default. <code>umi-plugin-locale</code> convention Introduces the corresponding js in src/locales, such as en-US.ts and zh-CN.ts, And do the following configuration in <code>config/config.ts</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">plugins<span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span>\n   <span class=\"token operator\">...</span><span class=\"token punctuation\">,</span>\n   locale<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        enable<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'zh-CN'</span><span class=\"token punctuation\">,</span>\n        baseNavigator<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">...</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>I am happy to use the function of globalization. See <a href=\"https://github.com/umijs/umi-plugin-locale#usage%20for%20detailed%20configuration\">config</a>。</p>\n<p><code>umi-plugin-locale</code> encapsulates <a href=\"https://github.com/yahoo/react-intl\">react-intl</a>, api is basically the same as <code>react-intl</code>, and is more convenient to package. All apis are as follows:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> formatMessage<span class=\"token punctuation\">,</span> setLocale<span class=\"token punctuation\">,</span> getLocale<span class=\"token punctuation\">,</span> FormattedMessage <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'umi/locale'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"formatt-message\">Formatt Message<a href=\"#formatt-message\" aria-hidden class=\"anchor\">#</a></h3>\n<p>If we have the following configuration in <code>en-US.ts</code> and <code>zh-CN.ts</code> respectively:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// zh-CN.ts</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'navbar.lang'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'中文'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// en-US.ts</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'navbar.lang'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'English'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We can use this in the component</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FormattedMessage <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'umi/locale'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>FormattedMessage id<span class=\"token operator\">=</span><span class=\"token string\">\"navbar.lang\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>In some cases, you may need to return a string directly. You can use it like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> formatMessage <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'umi/locale'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token function\">formatMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> <span class=\"token string\">'navbar.lang'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"set-locale\">Set Locale<a href=\"#set-locale\" aria-hidden class=\"anchor\">#</a></h3>\n<p><code>umi-plugin-locale</code> exposes apis named <code>setLocale</code> and <code>getLocale</code>, which make it easy to switch between regions. The code like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"> <span class=\"token operator\">...</span>\n <span class=\"token function-variable function\">changLang</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> locale <span class=\"token operator\">=</span> <span class=\"token function\">getLocale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>locale <span class=\"token operator\">||</span> locale <span class=\"token operator\">===</span> <span class=\"token string\">'zh-CN'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setLocale</span><span class=\"token punctuation\">(</span><span class=\"token string\">'en-US'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setLocale</span><span class=\"token punctuation\">(</span><span class=\"token string\">'zh-CN'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">&lt;</span>Button\n          size<span class=\"token operator\">=</span><span class=\"token string\">\"small\"</span>\n          ghost<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>theme <span class=\"token operator\">===</span> <span class=\"token string\">'dark'</span><span class=\"token punctuation\">}</span>\n          style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n            margin<span class=\"token punctuation\">:</span> <span class=\"token string\">'0 8px'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n          onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">changLang</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>FormattedMessage id<span class=\"token operator\">=</span><span class=\"token string\">\"navbar.lang\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>More advanced usage can be found in <a href=\"https://github.com/yahoo/react-intl/wiki#getting-started\">react-intl's api</a>.</p>\n<h3 id=\"remove-globalization\">Remove globalization<a href=\"#remove-globalization\" aria-hidden class=\"anchor\">#</a></h3>\n<p>If you want to remove the globalization that comes with pro, you can use <code>npm run i18n-remove</code>, <code>i18n-remove</code> and compare the basics just to test the code you bring yourself. If you use advanced features, you may need to manually Go to make changes. For example, the dynamic code of <code>formatMessage({id:somevar})</code> may not be able to analyze and delete it for you.</p>\n<p>If you have a good way to achieve welcome <a href=\"https://github.com/ant-design/ant-design-pro-cli\">pr</a>.</p>","tableOfContents":"","frontmatter":{"title":{"zh_CN":"i18n","en_US":"i18n"},"order":13,"type":"Advanced"},"fields":{"path":"\\docs\\i18n.en-US.md","slug":"/docs/i18n","modifiedTime":1565564489175,"avatarList":[{"href":"/chenshuai2144","text":"\n        chenshuai2144\n","src":"https://avatars1.githubusercontent.com/u/8186664?s=40&amp;v=4"},{"href":"/viztor","text":"\n        viztor\n","src":"https://avatars0.githubusercontent.com/u/3511050?s=40&amp;v=4"},{"href":"/mharrvic","text":"\n        mharrvic\n","src":"https://avatars3.githubusercontent.com/u/15852818?s=40&amp;v=4"},{"href":"/ddcat1115","text":"\n        ddcat1115\n","src":"https://avatars2.githubusercontent.com/u/7017767?s=40&amp;v=4"}]}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":{"zh_CN":"使用 TypeScript","en_US":"使用 TypeScript"},"order":7,"type":"进阶","time":null},"fields":{"slug":"/docs/uset-typescript-cn","path":"\\docs\\uset-typescript.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Use TypeScript","en_US":"Use TypeScript"},"order":7,"type":"Advanced","time":null},"fields":{"slug":"/docs/uset-typescript","path":"\\docs\\uset-typescript.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"升级到 4.0 版本","en_US":"升级到 4.0 版本"},"order":2,"type":"入门","time":null},"fields":{"slug":"/docs/upgrade-v4-cn","path":"\\docs\\upgrade-v4.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Upgrade to V4","en_US":"Upgrade to V4"},"order":2,"type":"Introduction","time":null},"fields":{"slug":"/docs/upgrade-v4","path":"\\docs\\upgrade-v4.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"UI 测试","en_US":"UI 测试"},"order":15,"type":"进阶","time":null},"fields":{"slug":"/docs/ui-test-cn","path":"\\docs\\ui-test.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"UI Test","en_US":"UI Test"},"order":15,"type":"Advanced","time":null},"fields":{"slug":"/docs/ui-test","path":"\\docs\\ui-test.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"更换主题","en_US":"更换主题"},"order":14,"type":"进阶","time":null},"fields":{"slug":"/docs/theme-cn","path":"\\docs\\theme.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Theme","en_US":"Theme"},"order":14,"type":"Advanced","time":null},"fields":{"slug":"/docs/theme","path":"\\docs\\theme.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"修改样式","en_US":"修改样式"},"order":6,"type":"开发","time":null},"fields":{"slug":"/docs/style-cn","path":"\\docs\\style.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Edit Style","en_US":"Edit Style"},"order":6,"type":"Development","time":null},"fields":{"slug":"/docs/style","path":"\\docs\\style.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"和服务端进行交互","en_US":"和服务端进行交互"},"order":7,"type":"开发","time":null},"fields":{"slug":"/docs/server-cn","path":"\\docs\\server.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Communicate with Server","en_US":"Communicate with Server"},"order":7,"type":"Development","time":null},"fields":{"slug":"/docs/server","path":"\\docs\\server.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"路由和菜单","en_US":"路由和菜单"},"order":3,"type":"开发","time":null},"fields":{"slug":"/docs/router-and-nav-cn","path":"\\docs\\router-and-nav.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Router and Nav","en_US":"Router and Nav"},"order":3,"type":"Development","time":null},"fields":{"slug":"/docs/router-and-nav","path":"\\docs\\router-and-nav.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"设计资源","en_US":"设计资源"},"order":23,"type":"其他","time":null},"fields":{"slug":"/docs/resource-cn","path":"\\docs\\resource.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Design Kit","en_US":"Design Kit"},"order":23,"type":"Other","time":null},"fields":{"slug":"/docs/resource","path":"\\docs\\resource.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"新增页面","en_US":"新增页面"},"order":4,"type":"开发","time":null},"fields":{"slug":"/docs/new-page-cn","path":"\\docs\\new-page.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"New Page","en_US":"New Page"},"order":4,"type":"Development","time":null},"fields":{"slug":"/docs/new-page","path":"\\docs\\new-page.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"新增业务组件","en_US":"新增业务组件"},"order":5,"type":"开发","time":null},"fields":{"slug":"/docs/new-component-cn","path":"\\docs\\new-component.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"New Component","en_US":"New Component"},"order":5,"type":"Development","time":null},"fields":{"slug":"/docs/new-component","path":"\\docs\\new-component.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Mock 和联调","en_US":"Mock 和联调"},"order":13,"type":"开发","time":null},"fields":{"slug":"/docs/mock-api-cn","path":"\\docs\\mock-api.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Mock Data","en_US":"Mock Data"},"order":13,"type":"Development","time":null},"fields":{"slug":"/docs/mock-api","path":"\\docs\\mock-api.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"布局","en_US":"布局"},"order":3,"type":"开发","time":null},"fields":{"slug":"/docs/layout-cn","path":"\\docs\\layout.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Layout","en_US":"Layout"},"order":3,"type":"Development","time":null},"fields":{"slug":"/docs/layout","path":"\\docs\\layout.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"引入外部模块","en_US":"引入外部模块"},"order":8,"type":"开发","time":null},"fields":{"slug":"/docs/import-cn","path":"\\docs\\import.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Import Module","en_US":"Import Module"},"order":8,"type":"Development","time":null},"fields":{"slug":"/docs/import","path":"\\docs\\import.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"国际化","en_US":"国际化"},"order":13,"type":"进阶","time":null},"fields":{"slug":"/docs/i18n-cn","path":"\\docs\\i18n.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"i18n","en_US":"i18n"},"order":13,"type":"Advanced","time":null},"fields":{"slug":"/docs/i18n","path":"\\docs\\i18n.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"图表","en_US":"图表"},"order":11,"type":"进阶","time":null},"fields":{"slug":"/docs/graph-cn","path":"\\docs\\graph.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Charts","en_US":"Charts"},"order":11,"type":"Advanced","time":null},"fields":{"slug":"/docs/graph","path":"\\docs\\graph.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"开始使用","en_US":"开始使用"},"order":0,"type":"入门","time":null},"fields":{"slug":"/docs/getting-started-cn","path":"\\docs\\getting-started.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"About Sortd","en_US":"About Sortd"},"order":0,"type":"Introduction","time":null},"fields":{"slug":"/docs/getting-started","path":"\\docs\\getting-started.en-US.md"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/docs/i18n","type":"/docs/"}}}