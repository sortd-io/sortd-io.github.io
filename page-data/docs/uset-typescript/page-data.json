{"componentChunkName":"component---src-templates-docs-tsx","path":"/docs/uset-typescript","webpackCompilationHash":"ddb134439a54b8ba43e8","result":{"data":{"markdownRemark":{"html":"<p>TypeScript is a superset of javascript that adds a lot of useful features to javascript:</p>\n<ul>\n<li>Type annotations and compile-time type checking</li>\n<li>Type inference</li>\n<li>Type erasure</li>\n<li>Interfaces</li>\n<li>Enumerated types</li>\n<li>Generics</li>\n<li>Namespaces</li>\n<li>Tuples</li>\n<li>Async/await</li>\n</ul>\n<p>Using TypeScript is more friendly to the IDE. If you are developing with vscode, your development experience will be significantly improved. Based on the characteristics of umi, we can easily use it in Pro.</p>\n<p>Pro comes with the configuration files required by TypeScript.</p>\n<ul>\n<li>tsconfig.json</li>\n<li>tslint.json</li>\n</ul>\n<p>Tsconfig will declare that this is a TypeScript project, which will do some configuration, the details can be seen <a href=\"https://www.typescriptlang.org/docs/handbook/tsconfig-json.html\">here</a>. Tslint like eslint will check your code. To improve the experience, you can install vscode's tslint plugin. Next, we can start TypeScript development by just creating a new tsx file.</p>\n<h3 id=\"faq\">FAQ<a href=\"#faq\" aria-hidden class=\"anchor\">#</a></h3>\n<h4 id=\"used-in-css-module\">Used in css-module<a href=\"#used-in-css-module\" aria-hidden class=\"anchor\">#</a></h4>\n<p>Because Pro uses css-module, you may need</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> style <span class=\"token keyword\">from</span> <span class=\"token string\">'./index.style.less'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>At this time typescript will throw an error, you can use</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> style <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./index.less'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Avoid this problem. There are many related discussions in the community. There is no best way for the time being. Only the relatively perfect <a href=\"https://github.com/Jimdo/typings-for-css-modules-loader\">typings-for-css-modules-loader</a>, Similarly, importing images, css, svg can also avoid type checking in this way.</p>\n<h4 id=\"formcreate\">Form.create()<a href=\"#formcreate\" aria-hidden class=\"anchor\">#</a></h4>\n<p>Using Form.create() in TypeScript may throw an error similar to the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">error TS2339: Property <span class=\"token string\">'loading'</span> does not exist on <span class=\"token builtin class-name\">type</span> <span class=\"token string\">'IntrinsicAttributes &amp; IntrinsicClassAttributes&lt;Compone\nnt&lt;{}, ComponentState>> &amp; Readonly&lt;{ childr...'</span><span class=\"token builtin class-name\">.</span></code></pre></div>\n<p>This is because the type of props did not pass the check, the following is the correct way.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FormComponentProps <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"antd/lib/form/Form\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IFormComponentProps</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">FormComponentProps</span> <span class=\"token punctuation\">{</span>\n  test<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">FormComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">IFormComponentProps</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"> </span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">:</span> IFormComponentProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">...</span><span class=\"token punctuation\">.</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> getFieldDecorator <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>form<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"use-a-library-without-dts\">Use a library without d.ts<a href=\"#use-a-library-without-dts\" aria-hidden class=\"anchor\">#</a></h4>\n<p>In the actual use of some libraries and there is no relevant d.ts, this time we can directly define in the file used, taking the high German map as an example.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Define the type of Map</span>\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GaoDeAMap</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">:</span> HTMLElement<span class=\"token punctuation\">,</span> option<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> center<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> zoom<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Define global AMap</span>\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">const</span> AMap<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n  Map<span class=\"token punctuation\">:</span> <span class=\"token keyword\">typeof</span> GaoDeAMap<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// tslint:disable-next-line:max-classes-per-file</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MapComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> mapDom<span class=\"token punctuation\">:</span> HTMLDivElement<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">public</span> map<span class=\"token punctuation\">:</span> GaoDeAMap<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AMap<span class=\"token punctuation\">.</span>Map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mapDom<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      center<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">117.000923</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36.675807</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      zoom<span class=\"token punctuation\">:</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>map <span class=\"token operator\">=</span> map<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>map<span class=\"token punctuation\">.</span><span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">ref</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mapDom <span class=\"token operator\">=</span> ref<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> MapComponent<span class=\"token punctuation\">;</span></code></pre></div>\n<p>If you want to use it multiple times, you can create a namespace.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">declare</span> <span class=\"token keyword\">namespace</span> AMap <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">class</span> <span class=\"token class-name\">Map</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">:</span> HTMLElement<span class=\"token punctuation\">,</span> option<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> center<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> zoom<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token operator\">=</span> AMap<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">namespace</span> AMap<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Then just introduce it directly in the project.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> AMapInterface <span class=\"token keyword\">from</span> <span class=\"token string\">'./AMap'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">const</span> AMap<span class=\"token punctuation\">:</span> <span class=\"token keyword\">typeof</span> AMapInterface<span class=\"token punctuation\">;</span></code></pre></div>","tableOfContents":"","frontmatter":{"title":{"zh_CN":"Use TypeScript","en_US":"Use TypeScript"},"order":7,"type":"Advanced"},"fields":{"path":"\\docs\\uset-typescript.en-US.md","slug":"/docs/uset-typescript","modifiedTime":1565564489206,"avatarList":[{"href":"/chenshuai2144","text":"\n        chenshuai2144\n","src":"https://avatars1.githubusercontent.com/u/8186664?s=40&amp;v=4"},{"href":"/nishant8BITS","text":"\n        nishant8BITS\n","src":"https://avatars3.githubusercontent.com/u/4658636?s=40&amp;v=4"}]}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":{"zh_CN":"使用 TypeScript","en_US":"使用 TypeScript"},"order":7,"type":"进阶","time":null},"fields":{"slug":"/docs/uset-typescript-cn","path":"\\docs\\uset-typescript.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Use TypeScript","en_US":"Use TypeScript"},"order":7,"type":"Advanced","time":null},"fields":{"slug":"/docs/uset-typescript","path":"\\docs\\uset-typescript.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"开始使用","en_US":"开始使用"},"order":0,"type":"入门","time":null},"fields":{"slug":"/docs/getting-started-cn","path":"\\docs\\getting-started.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"About Sortd","en_US":"About Sortd"},"order":0,"type":"Introduction","time":null},"fields":{"slug":"/docs/getting-started","path":"\\docs\\getting-started.en-US.md"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/docs/uset-typescript","type":"/docs/"}}}