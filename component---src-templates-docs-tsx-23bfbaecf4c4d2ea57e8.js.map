{"version":3,"sources":["webpack:///./src/components/Content/EditButton.tsx","webpack:///./src/components/Content/AvatarList.tsx","webpack:///./src/components/Content/Article.tsx","webpack:///./src/components/Content/MainContent.tsx","webpack:///./src/templates/docs.tsx"],"names":["EditButton","_ref","title","filename","_ref$sourcePath","sourcePath","external_React_default","a","createElement","tooltip_default","className","target","rel","href","icon_default","type","AvatarList","render","_this$props$avatarLis","this","props","avatarList","map","item","text","avatar_default","src","alt","size","React","Component","Article","componentDidMount","delegation","delegate","node","e","window","ga","delegateTarget","componentWillUnmount","clearTimeout","pingTimer","destroy","_this","content","meta","subtitle","path","modifiedTime","locale","context","intl","react_document_title_default","Fragment","ref","Content_EditButton","index_es","id","Content_AvatarList","moment","format","toc","length","affix_default","offsetTop","dangerouslySetInnerHTML","__html","replace","PureComponent","contextTypes","PropTypes","object","isRequired","SubMenu","getModuleDataWithProps","moduleData","menuList","excludedSuffix","isZhCN","location","pathname","filter","includes","isNotTopLevel","level","MainContent","_React$PureComponent","call","getSideBarOpenKeys","nextProps","find","_ref2","slug","handleMenuOpenChange","openKeys","setState","convertFilename","generateMenuItem","_ref3","_ref3$before","before","_ref3$after","after","key","disabled","child","link","gatsby_browser_entry","to","menu_default","Item","important","badge_default","dot","generateSubMenuItems","obj","footerNavIcons","topLevel","bind","_assertThisInitialized","itemGroups","Object","keys","groupItems","sort","b","time","valueOf","order","charCodeAt","concat","_toConsumableArray","getMenuItems","menuItems","_ref6","getPreAndNext","localizedPageData","list","children","reduce","pre","index","findIndex","prev","next","state","componentDidUpdate","componentWillReceiveProps","hash","element","document","getElementById","decodeURIComponent","setTimeout","scrollIntoView","timer","_this$props","isMobile","activeMenuItem","endsWith","substring","_this$getPreAndNext","mainContainerClass","classNames","menuChild","inlineIndent","mode","selectedKeys","onOpenChange","row_default","es","iconChild","wrapperClassName","col_default","xxl","xl","lg","md","sm","xs","Article_Article","assign","span","offset","Template","data","rest","_objectWithoutPropertiesLoose","markdownRemark","allMarkdownRemark","frontmatter","fields","html","tableOfContents","edges","newFrontmatter","transformerFrontmatter","layout","MainContent_MainContent","pageQuery"],"mappings":"siBAwBeA,EAjBV,SAAAC,GAAA,IACHC,EADGD,EACHC,MACAC,EAFGF,EAEHE,SAFGC,EAAAH,EAGHI,kBAHG,IAAAD,EAGU,wDAHVA,EAAA,OAKHE,EAAAC,EAAAC,cAAAC,EAAAF,EAAA,CAASL,MAAOA,GACdI,EAAAC,EAAAC,cAAA,KACEE,UAAU,cACVC,OAAO,SACPC,IAAI,sBACJC,KAAI,GAAKR,EAAaF,GAEtBG,EAAAC,EAAAC,cAAAM,EAAAP,EAAA,CAAMQ,KAAK,2CCgBFC,kLAvBbC,OAAA,WAAS,IAAAC,EACqBC,KAAKC,MAAzBC,kBADD,IAAAH,EACc,GADdA,EAEP,OAAKG,EAIHf,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACZW,EAAWC,IAAI,SAAAC,GAAI,OAClBjB,EAAAC,EAAAC,cAAA,KACEE,UAAU,WACVC,OAAO,SACPC,IAAI,sBACJC,KAAI,oBAAsBU,EAAKV,MAE/BP,EAAAC,EAAAC,cAAAC,EAAAF,EAAA,CAASL,MAAOqB,EAAKC,MACnBlB,EAAAC,EAAAC,cAAAiB,EAAAlB,EAAA,CAAQmB,IAAKH,EAAKG,IAAKC,IAAKJ,EAAKC,KAAMI,KAAK,eAZ7C,SAZYC,IAAMC,eCgBVC,0LAWnBC,kBAAA,WAEEb,KAAKc,WAAaC,IAChBf,KAAKgB,KACL,iBACA,QACA,SAACC,GACMC,OAAeC,IACjBD,OAAeC,GAAG,OAAQ,QAAS,WAAY,WAAYF,EAAEG,eAAe1B,QAGjF,MAIJ2B,qBAAA,WACEC,aAAatB,KAAKuB,WACdvB,KAAKc,YACPd,KAAKc,WAAWU,aAIpB1B,OAAA,WAAS,IAAA2B,EAAAzB,KAEC0B,EADU1B,KAAVC,MACAyB,QACAC,EAASD,EAATC,KACA5C,EAAoD4C,EAApD5C,MAAO6C,EAA6CD,EAA7CC,SAAUC,EAAmCF,EAAnCE,KAAMC,EAA6BH,EAA7BG,aAAc5B,EAAeyB,EAAfzB,WAEnC6B,EACN/B,KAAKgC,QADPC,KAAQF,OAMV,OACE5C,EAAAC,EAAAC,cAAC6C,EAAA9C,EAAD,CAAeL,OAAUA,EAAMgD,IAAWhD,GAAtB,YAClBI,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+C,SAAA,KACEhD,EAAAC,EAAAC,cAAA,WACEE,UAAU,WACV6C,IAAK,SAAApB,GACHS,EAAKT,KAAOA,IAGd7B,EAAAC,EAAAC,cAAA,UACGN,EAAMgD,IAAWhD,EAChB6C,GAAuB,UAAXG,EACZ5C,EAAAC,EAAAC,cAAA,QAAME,UAAU,YAAYqC,GADK,KAGnCzC,EAAAC,EAAAC,cAACgD,EAAD,CAAYtD,MAAOI,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAkBC,GAAG,0BAA4BvD,SAAU6C,KAGhF1C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbJ,EAAAC,EAAAC,cAACmD,EAAD,CAAYtC,WAAYA,IACxBf,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAkBC,GAAG,6BACpBE,IAAOX,GAAcY,OAAO,yBAG7BhB,EAAQiB,KAAOjB,EAAQiB,IAAIC,QAAU,IAAkB,IAAbjB,EAAKgB,IAAgB,KAC/DxD,EAAAC,EAAAC,cAAAwD,EAAAzD,EAAA,CAAOG,UAAU,YAAYuD,UAAW,IACtC3D,EAAAC,EAAAC,cAAA,OACE0D,wBAAyB,CACvBC,OAAQtB,EAAQiB,IAAIM,QAAQ,QAAS,oBAAoBA,QAAQ,OAAQ,SAKjF9D,EAAAC,EAAAC,cAAA,WACEE,UAAU,yBACVwD,wBAAyB,CAAEC,OAAQtB,EAAQA,kBA/EpBhB,IAAMwC,eAAtBtC,EACZuC,aAAe,CACpBlB,KAAMmB,IAAUC,OAAOC,6eCPnBC,cA2BR,SAASC,EAAuBvD,GAC9B,IAAMwD,EAAaxD,EAAMyD,SACnBC,EAAiBC,YAAO3D,EAAM4D,SAASC,UAAY,QAAU,QACnE,OAAOL,EAAWM,OAAO,SAAAjF,GAAkB,IAAfE,EAAeF,EAAfE,SAC1B,QAAKA,KAGAA,EAASgF,SAAS,WAAahF,EAASgF,SAAS,UAG/ChF,EAASgF,SAASL,MAI7B,SAASM,EAAcC,GACrB,MAAiB,aAAVA,MAGYC,sBASnB,SAAAA,EAAYlE,GAAyB,IAAAwB,EAAA,OACnCA,EAAA2C,EAAAC,KAAArE,KAAMC,IAAND,MAqCFsE,mBAAqB,SAACC,GAAgC,IAC5CT,EAAaS,EAAUV,SAAvBC,SAEF1D,EADaoD,EAAuBe,GAClBC,KAAK,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAAcZ,EAASE,SAASU,KAC7D,OAAItE,EACK,CAACA,EAAKR,MAER,IA7C4B6B,EAgDrCkD,qBAAuB,SAACC,GACtBnD,EAAKoD,SAAS,CACZD,cAlDiCnD,EAsDrCqD,gBAAkB,SAAC9F,GAAqB,IAExB8E,EACVrC,EAAKxB,MADP4D,SAAYC,SAEd,OAAIF,YAAOE,KAAc9E,EAASgF,SAAS,OAC/BhF,EAAV,MAEKA,GA7D4ByC,EAgErCsD,iBAAmB,SAAAC,EAAkC5E,GAAuB,IAAA6E,EAAAD,EAAtDE,cAAsD,IAAAD,EAA7C,KAA6CA,EAAAE,EAAAH,EAAvCI,aAAuC,IAAAD,EAA/B,KAA+BA,EAC1E,IAAK/E,EAAKrB,MACR,OAAO,KAFiE,IAKhEgD,EACNN,EAAKO,QADPC,KAAQF,OAMJ1B,EAAO,CACXlB,EAAAC,EAAAC,cAAA,QAAMgG,IAAI,WAAWjF,EAAKrB,MAAMgD,IAAW3B,EAAKrB,OAChDI,EAAAC,EAAAC,cAAA,QAAME,UAAU,UAAU8F,IAAI,WAChB,UAAXtD,GAAsB3B,EAAKwB,WAIxB0D,EAAalF,EAAbkF,SAEFC,EAASnF,EAAKoF,KAOlBrG,EAAAC,EAAAC,cAAA,KACEK,KAAMU,EAAKoF,KACXhG,OAAO,SACPC,IAAI,sBACJF,UAAU,0BAET2F,EACA7E,EAPH,IAOSlB,EAAAC,EAAAC,cAAAM,EAAAP,EAAA,CAAMQ,KAAK,WACjBwF,GAdHjG,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAMC,GAAIjE,EAAKqD,gBAAgB1E,EAAKpB,WACjCkG,EACA7E,EACA+E,GAeL,OACEjG,EAAAC,EAAAC,cAAAsG,EAAAvG,EAAMwG,KAAN,CAAWP,IAAK5D,EAAKqD,gBAAgB1E,EAAKpB,UAAWsG,SAAUA,GAC5DlF,EAAKyF,UAAY1G,EAAAC,EAAAC,cAAAyG,EAAA1G,EAAA,CAAO2G,IAAK3F,EAAKyF,WAAYN,GAAiBA,IAzGjC9D,EA8GrCuE,qBAAuB,SAACC,EAAiBC,QAAwB,IAAxBA,MAAiB,IAAO,IAErDnE,EACNN,EAAKO,QADPC,KAAQF,OAMV,IAAKkE,EAAK,MAAO,GACjB,IAAME,GAAaF,EAAIE,UAA+B,IAAIhG,IACxDsB,EAAKsD,iBAAiBqB,KAAtBC,EAAA5E,GAAiCyE,IAE7BI,EAAaC,OAAOC,KAAKP,GAC5BlC,OAAOE,GACP9D,IAAI,SAAAP,GACH,IAAM6G,EAAcR,EAAIrG,GACrB8G,KAAK,SAACtH,EAAGuH,GACR,MAAI,SAAUvH,GAAK,SAAUuH,EACpBlE,IAAOkE,EAAEC,MAAMC,UAAYpE,IAAOrD,EAAEwH,MAAMC,UAE/C,UAAWzH,GAAK,UAAWuH,EACtBvH,EAAE0H,MAAQH,EAAEG,MAEd1H,EAAEL,MAAMgD,GAAQgF,WAAW,GAAKJ,EAAE5H,MAAMgD,GAAQgF,WAAW,KAEnE5G,IAAIsB,EAAKsD,iBAAiBqB,KAAtBC,EAAA5E,GAAiCyE,IACxC,OACE/G,EAAAC,EAAAC,cAACkE,EAAD,CAASxE,MAAOa,EAAMyF,IAAKzF,GACxB6G,KAIT,SAAAO,OAAAC,EAAWd,GAAXc,EAAwBX,KA9IW7E,EAiJrCyF,aAAe,SAAChB,QAAwB,IAAxBA,MAAiB,IAC/B,IAAMzC,EAAaD,EAAuB/B,EAAKxB,OAErC8B,EACNN,EAAKO,QADPC,KAAQF,OAEJoF,EAAuBD,YAAazD,EAAY1B,IAAW,GAKjE,OADekF,EAFbxF,EAAKuE,qBAAqBmB,EAAUhB,SAAuBD,IAAmB,IAEnDnC,OAAO,SAAAqD,GAAA,OAAAA,EAAG/B,OA1JJ5D,EA8JrC4F,cAAgB,SAACF,GAAmB,IAGtBnI,EAERyC,EAAKxB,MAHPqH,kBACE3F,KAAQ3C,SAINuI,EACJJ,EAAUvE,SAAWuE,EAAU,GAAGlH,MAAMuH,SAAS5E,OAC7CuE,EACAZ,OAAOC,KAAKW,GAAWM,OACrB,SAACC,EAAKrC,GAAN,OAAcqC,EAAIV,OAAOG,EAAU9B,GAAKpF,MAAMuH,WAC9C,IAEFG,EAAQJ,EAAKK,UACjB,SAACxH,GAAD,OAA2BA,EAAKiF,MAAQrG,GAAYoB,EAAKiF,MAAWrG,EAAhB,QAGtD,OAAe,IAAX2I,EACK,GAEF,CACLE,KAAMN,EAAKI,EAAQ,GACnBG,KAAMP,EAAKI,EAAQ,KAnLrBlG,EAAKsG,MAAQ,CACXnD,SAAUnD,EAAK6C,mBAAmBrE,IAAU,IAHXwB,oHAOrCZ,kBAAA,WACEb,KAAKgI,wBAGPC,0BAAA,SAA0B1D,GACxB,IAAMK,EAAW5E,KAAKsE,mBAAmBC,GACrCK,GACF5E,KAAK6E,SAAS,CACZD,gBAKNoD,mBAAA,WACE,GAAK9G,OAAO2C,SAASqE,KAArB,CAGA,IAAMC,EAAUC,SAASC,eACvBC,mBAAmBpH,OAAO2C,SAASqE,KAAKjF,QAAQ,IAAK,MAEvDsF,WAAW,WACLJ,GACFA,EAAQK,gBAAe,IAExB,SAGLnH,qBAAA,WACEC,aAAatB,KAAKyI,UAsJpB3I,OAAA,WAAS,IA5NgBG,EACjB6D,EA2NC4E,EACiC1I,KAAKC,MAArCqH,EADDoB,EACCpB,kBAAmBqB,EADpBD,EACoBC,SAErBC,GA/NiB3I,EA+NkBD,KAAKC,OA9NxC6D,EAAa7D,EAAM4D,SAAnBC,UACK+E,SAAS,KACb/E,EAASgF,UAAU,EAAGhF,EAASlB,OAAS,GAE1CkB,GA2NCqD,EAAYnH,KAAKkH,eAJhB6B,EAKgB/I,KAAKqH,cAAcF,GAAlCU,EALDkB,EAKClB,KAAMC,EALPiB,EAKOjB,KACRkB,EAAqBC,IAAW,iBAAkB,IAChDrE,EAAa5E,KAAK+H,MAAlBnD,SACFsE,EACJ/J,EAAAC,EAAAC,cAAAsG,EAAAvG,EAAA,CACE+J,aAAc,GACd5J,UAAU,kBACV6J,KAAK,SACLxE,SAAUA,EACVyE,aAAc,CAACT,GACfU,aAActJ,KAAK2E,sBAElBwC,GAGL,OACEhI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbJ,EAAAC,EAAAC,cAAAkK,EAAAnK,EAAA,KACGuJ,EACCxJ,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CACEC,UAAW,CAACtK,EAAAC,EAAAC,cAAAM,EAAAP,EAAA,CAAMQ,KAAK,gBAAkBT,EAAAC,EAAAC,cAAAM,EAAAP,EAAA,CAAMQ,KAAK,eACpDyF,IAAI,cACJqE,iBAAiB,kBAEhBR,GAGH/J,EAAAC,EAAAC,cAAAsK,EAAAvK,EAAA,CAAKwK,IAAK,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI1K,UAAU,aAC1D2J,GAGL/J,EAAAC,EAAAC,cAAAsK,EAAAvK,EAAA,CAAKwK,IAAK,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAChD9K,EAAAC,EAAAC,cAAA,OAAKE,UAAWyJ,GACd7J,EAAAC,EAAAC,cAAC6K,EAAD3D,OAAA4D,OAAA,GAAanK,KAAKC,MAAlB,CAAyByB,QAAS4F,QAKxCnI,EAAAC,EAAAC,cAAAkK,EAAAnK,EAAA,KACED,EAAAC,EAAAC,cAAAsK,EAAAvK,EAAA,CAAK0K,GAAI,CAAEM,KAAM,GAAIC,OAAQ,GAAKN,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACpD9K,EAAAC,EAAAC,cAAA,WAASE,UAAU,iBAChBsI,EACC1I,EAAAC,EAAAC,cAAA,KAAGE,UAAU,aACXJ,EAAAC,EAAAC,cAAAM,EAAAP,EAAA,CAAMG,UAAU,yBAAyBK,KAAK,SAC7CiI,EAAK5H,MAAMuH,UAEZ,KACHM,EACC3I,EAAAC,EAAAC,cAAA,KAAGE,UAAU,aACVuI,EAAK7H,MAAMuH,SACZrI,EAAAC,EAAAC,cAAAM,EAAAP,EAAA,CAAMG,UAAU,wBAAwBK,KAAK,WAE7C,aA3PuBc,IAAMwC,eCFhC,SAASoH,EAATxL,GASZ,IARDyL,EAQCzL,EARDyL,KACGC,sIAOFC,CAAA3L,EAAA,UACO4L,EAAsCH,EAAtCG,eAAgBC,EAAsBJ,EAAtBI,kBAChBC,EAA+CF,EAA/CE,YAAaC,EAAkCH,EAAlCG,OAAQC,EAA0BJ,EAA1BI,KAAMC,EAAoBL,EAApBK,gBAE7BrH,EADYiH,EAAVK,MACe7K,IAAI,SAAAsE,GAAc,IAAXzD,EAAWyD,EAAXzD,KACtBiK,EAAiBC,YAAuBlK,EAAK4J,aACnD,OAAArE,OAAA4D,OAAA,CACEzF,KAAM1D,EAAK6J,OAAOnG,KAClB/C,KAAI4E,OAAA4D,OAAA,GACCc,EADD,CAEFvG,KAAM1D,EAAK6J,OAAOnG,KAClB1F,SAAUgC,EAAK6J,OAAOnG,QAErBuG,EAPL,CAQEjM,SAAUgC,EAAK6J,OAAOhJ,SAG1B,OACE1C,EAAAC,EAAAC,cAAC8L,EAAA,EAAkBX,EACjBrL,EAAAC,EAAAC,cAAC+L,EAAD7E,OAAA4D,OAAA,GACMK,EADN,CAEElD,kBAAmB,CACjB3F,KAAI4E,OAAA4D,OAAA,GACCe,YAAuBN,GADxB,GAECC,EAFD,CAGF7L,SAAU6L,EAAOnG,KACjB7C,KAAMgJ,EAAOhJ,OAEfc,IAAKoI,EACLrJ,QAASoJ,GAEXpH,SAAUA,MDtCGS,EACZhB,aAAe,CACpBlB,KAAMmB,IAAUC,OAAOC,0FC0CpB,IAAM+H,EAAS","file":"component---src-templates-docs-tsx-23bfbaecf4c4d2ea57e8.js","sourcesContent":["import React from 'react';\r\nimport { Tooltip, Icon } from 'antd';\r\n\r\nconst EditButton: React.FC<{\r\n  title: React.ReactNode;\r\n  filename?: string;\r\n  sourcePath?: string;\r\n}> = ({\r\n  title,\r\n  filename,\r\n  sourcePath = 'https://github.com/sortd-io/sortd-website/edit/master',\r\n}) => (\r\n  <Tooltip title={title}>\r\n    <a\r\n      className=\"edit-button\"\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n      href={`${sourcePath}${filename}`}\r\n    >\r\n      <Icon type=\"edit\" />\r\n    </a>\r\n  </Tooltip>\r\n);\r\n\r\nexport default EditButton;\r\n","import React from 'react';\r\nimport { Avatar, Tooltip } from 'antd';\r\n\r\nclass AvatarList extends React.Component<{\r\n  avatarList: {\r\n    href: string;\r\n    text: string;\r\n    src: string;\r\n  }[];\r\n}> {\r\n  main: HTMLDivElement | null;\r\n\r\n  render() {\r\n    const { avatarList = [] } = this.props;\r\n    if (!avatarList) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div className=\"doc-avatar-list\">\r\n        {avatarList.map(item => (\r\n          <a\r\n            className=\"href-box\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            href={`http://github.com${item.href}`}\r\n          >\r\n            <Tooltip title={item.text}>\r\n              <Avatar src={item.src} alt={item.text} size=\"small\" />\r\n            </Tooltip>\r\n          </a>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AvatarList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport DocumentTitle from 'react-document-title';\r\nimport { Affix } from 'antd';\r\nimport delegate from 'delegate';\r\nimport moment from 'moment';\r\nimport EditButton from './EditButton';\r\nimport { IFrontmatterData } from '../../templates/docs';\r\nimport AvatarList from './AvatarList';\r\n\r\ninterface ArticleProps {\r\n  content: {\r\n    meta: IFrontmatterData;\r\n    toc: string | false;\r\n    content: string;\r\n  };\r\n}\r\n\r\nexport default class Article extends React.PureComponent<ArticleProps> {\r\n  static contextTypes = {\r\n    intl: PropTypes.object.isRequired,\r\n  };\r\n\r\n  delegation: any;\r\n\r\n  pingTimer: number;\r\n\r\n  node: HTMLElement | null | undefined;\r\n\r\n  componentDidMount() {\r\n    // Add ga event click\r\n    this.delegation = delegate(\r\n      this.node,\r\n      '.resource-card',\r\n      'click',\r\n      (e: { delegateTarget: { href: any } }) => {\r\n        if ((window as any).ga) {\r\n          (window as any).ga('send', 'event', 'Download', 'resource', e.delegateTarget.href);\r\n        }\r\n      },\r\n      false,\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(this.pingTimer);\r\n    if (this.delegation) {\r\n      this.delegation.destroy();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { props } = this;\r\n    const { content } = props;\r\n    const { meta } = content;\r\n    const { title, subtitle, path, modifiedTime, avatarList } = meta;\r\n    const {\r\n      intl: { locale },\r\n    } = this.context as {\r\n      intl: {\r\n        locale: 'zh-CN' | 'en-US';\r\n      };\r\n    };\r\n    return (\r\n      <DocumentTitle title={`${title[locale] || title} - Sortd`}>\r\n        <>\r\n          <article\r\n            className=\"markdown\"\r\n            ref={node => {\r\n              this.node = node;\r\n            }}\r\n          >\r\n            <h1>\r\n              {title[locale] || title}\r\n              {!subtitle || locale === 'en-US' ? null : (\r\n                <span className=\"subtitle\">{subtitle}</span>\r\n              )}\r\n              <EditButton title={<FormattedMessage id=\"app.content.edit-page\" />} filename={path} />\r\n            </h1>\r\n\r\n            <div className=\"modifiedTime\">\r\n              <AvatarList avatarList={avatarList} />\r\n              <FormattedMessage id=\"app.content.modifiedTime\" />\r\n              {moment(modifiedTime).format('YYYY-MM-DD HH:mm:SS')}\r\n            </div>\r\n\r\n            {!content.toc || content.toc.length <= 1 || meta.toc === false ? null : (\r\n              <Affix className=\"toc-affix\" offsetTop={16}>\r\n                <div\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: content.toc.replace(/<ul>/g, '<ul class=\"toc\">').replace(/\\/#/g, '#'),\r\n                  }}\r\n                />\r\n              </Affix>\r\n            )}\r\n            <section\r\n              className=\"markdown api-container\"\r\n              dangerouslySetInnerHTML={{ __html: content.content }}\r\n            />\r\n          </article>\r\n        </>\r\n      </DocumentTitle>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable eslint-comments/disable-enable-pair */\r\n/* eslint-disable react/jsx-one-expression-per-line */\r\n/* eslint-disable react/forbid-prop-types */\r\nimport React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport { Badge, Row, Col, Menu, Icon } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport MobileMenu from 'rc-drawer-menu';\r\nimport moment from 'moment';\r\nimport Article from './Article';\r\nimport { isZhCN, getMenuItems, MenuDataItem, IMenuData } from '../utils';\r\nimport { IFrontmatterData } from '../../templates/docs';\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nexport interface MainContentProps {\r\n  isMobile: boolean;\r\n  location: {\r\n    pathname: string;\r\n  };\r\n  menuList: MenuDataItem[];\r\n  localizedPageData: {\r\n    meta: IFrontmatterData;\r\n    toc: string | false;\r\n    content: string;\r\n  };\r\n}\r\n\r\ninterface MainContentState {\r\n  openKeys: string[];\r\n}\r\n\r\nfunction getActiveMenuItem(props: MainContentProps) {\r\n  const { pathname } = props.location;\r\n  if (pathname.endsWith('/')) {\r\n    return pathname.substring(0, pathname.length - 1);\r\n  }\r\n  return pathname;\r\n}\r\n\r\nfunction getModuleDataWithProps(props: MainContentProps) {\r\n  const moduleData = props.menuList;\r\n  const excludedSuffix = isZhCN(props.location.pathname) ? 'zh-CN' : 'en-US';\r\n  return moduleData.filter(({ filename }) => {\r\n    if (!filename) {\r\n      return false;\r\n    }\r\n    if (!filename.includes('zh-CN') && !filename.includes('en-US')) {\r\n      return true;\r\n    }\r\n    return filename.includes(excludedSuffix);\r\n  });\r\n}\r\n\r\nfunction isNotTopLevel(level: string) {\r\n  return level !== 'topLevel';\r\n}\r\n\r\nexport default class MainContent extends React.PureComponent<MainContentProps, MainContentState> {\r\n  static contextTypes = {\r\n    intl: PropTypes.object.isRequired,\r\n  };\r\n\r\n  timer: number;\r\n\r\n  currentModule: string;\r\n\r\n  constructor(props: MainContentProps) {\r\n    super(props);\r\n    this.state = {\r\n      openKeys: this.getSideBarOpenKeys(props) || [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.componentDidUpdate();\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps: MainContentProps) {\r\n    const openKeys = this.getSideBarOpenKeys(nextProps);\r\n    if (openKeys) {\r\n      this.setState({\r\n        openKeys,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (!window.location.hash) {\r\n      return;\r\n    }\r\n    const element = document.getElementById(\r\n      decodeURIComponent(window.location.hash.replace('#', '')),\r\n    );\r\n    setTimeout(() => {\r\n      if (element) {\r\n        element.scrollIntoView(true);\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(this.timer);\r\n  }\r\n\r\n  getSideBarOpenKeys = (nextProps: MainContentProps) => {\r\n    const { pathname } = nextProps.location;\r\n    const moduleData = getModuleDataWithProps(nextProps);\r\n    const item = moduleData.find(({ slug }) => pathname.includes(slug));\r\n    if (item) {\r\n      return [item.type];\r\n    }\r\n    return [];\r\n  };\r\n\r\n  handleMenuOpenChange = (openKeys: string[]) => {\r\n    this.setState({\r\n      openKeys,\r\n    });\r\n  };\r\n\r\n  convertFilename = (filename: string) => {\r\n    const {\r\n      location: { pathname },\r\n    } = this.props;\r\n    if (isZhCN(pathname) && !filename.includes('-cn')) {\r\n      return `${filename}-cn`;\r\n    }\r\n    return filename;\r\n  };\r\n\r\n  generateMenuItem = ({ before = null, after = null }, item: MenuDataItem) => {\r\n    if (!item.title) {\r\n      return null;\r\n    }\r\n    const {\r\n      intl: { locale },\r\n    } = this.context as {\r\n      intl: {\r\n        locale: 'zh-CN' | 'en-US';\r\n      };\r\n    };\r\n    const text = [\r\n      <span key=\"english\">{item.title[locale] || item.title}</span>,\r\n      <span className=\"chinese\" key=\"chinese\">\r\n        {locale === 'zh-CN' && item.subtitle}\r\n      </span>,\r\n    ];\r\n\r\n    const { disabled } = item;\r\n\r\n    const child = !item.link ? (\r\n      <Link to={this.convertFilename(item.filename)}>\r\n        {before}\r\n        {text}\r\n        {after}\r\n      </Link>\r\n    ) : (\r\n      <a\r\n        href={item.link}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        className=\"menu-item-link-outside\"\r\n      >\r\n        {before}\r\n        {text} <Icon type=\"export\" />\r\n        {after}\r\n      </a>\r\n    );\r\n\r\n    return (\r\n      <Menu.Item key={this.convertFilename(item.filename)} disabled={disabled}>\r\n        {item.important ? <Badge dot={item.important}>{child}</Badge> : child}\r\n      </Menu.Item>\r\n    );\r\n  };\r\n\r\n  generateSubMenuItems = (obj?: IMenuData, footerNavIcons = {}) => {\r\n    const {\r\n      intl: { locale },\r\n    } = this.context as {\r\n      intl: {\r\n        locale: 'zh-CN' | 'en-US';\r\n      };\r\n    };\r\n    if (!obj) return [];\r\n    const topLevel = ((obj.topLevel as MenuDataItem[]) || []).map(\r\n      this.generateMenuItem.bind(this, footerNavIcons),\r\n    );\r\n    const itemGroups = Object.keys(obj)\r\n      .filter(isNotTopLevel)\r\n      .map(type => {\r\n        const groupItems = (obj[type] as MenuDataItem[])\r\n          .sort((a, b) => {\r\n            if ('time' in a && 'time' in b) {\r\n              return moment(b.time).valueOf() - moment(a.time).valueOf();\r\n            }\r\n            if ('order' in a && 'order' in b) {\r\n              return a.order - b.order;\r\n            }\r\n            return a.title[locale].charCodeAt(0) - b.title[locale].charCodeAt(0);\r\n          })\r\n          .map(this.generateMenuItem.bind(this, footerNavIcons));\r\n        return (\r\n          <SubMenu title={type} key={type}>\r\n            {groupItems}\r\n          </SubMenu>\r\n        );\r\n      });\r\n    return [...topLevel, ...itemGroups];\r\n  };\r\n\r\n  getMenuItems = (footerNavIcons = {}) => {\r\n    const moduleData = getModuleDataWithProps(this.props);\r\n    const {\r\n      intl: { locale },\r\n    } = this.context;\r\n    const menuItems: IMenuData = getMenuItems(moduleData, locale) || {};\r\n    const topLevel =\r\n      this.generateSubMenuItems(menuItems.topLevel as IMenuData, footerNavIcons) || [];\r\n\r\n    const result = [...topLevel].filter(({ key }) => key);\r\n    return result;\r\n  };\r\n\r\n  getPreAndNext = (menuItems: any) => {\r\n    const {\r\n      localizedPageData: {\r\n        meta: { filename },\r\n      },\r\n    } = this.props;\r\n\r\n    const list =\r\n      menuItems.length && !menuItems[0].props.children.length\r\n        ? menuItems\r\n        : Object.keys(menuItems).reduce(\r\n            (pre, key) => pre.concat(menuItems[key].props.children),\r\n            [],\r\n          );\r\n    const index = list.findIndex(\r\n      (item: { key: string }) => item.key === filename || item.key === `${filename}-cn`,\r\n    );\r\n\r\n    if (index === -1) {\r\n      return {};\r\n    }\r\n    return {\r\n      prev: list[index - 1],\r\n      next: list[index + 1],\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const { localizedPageData, isMobile } = this.props;\r\n\r\n    const activeMenuItem = getActiveMenuItem(this.props);\r\n    const menuItems = this.getMenuItems();\r\n    const { prev, next } = this.getPreAndNext(menuItems);\r\n    const mainContainerClass = classNames('main-container', {});\r\n    const { openKeys } = this.state;\r\n    const menuChild = (\r\n      <Menu\r\n        inlineIndent={16}\r\n        className=\"aside-container\"\r\n        mode=\"inline\"\r\n        openKeys={openKeys}\r\n        selectedKeys={[activeMenuItem]}\r\n        onOpenChange={this.handleMenuOpenChange}\r\n      >\r\n        {menuItems}\r\n      </Menu>\r\n    );\r\n    return (\r\n      <div className=\"main-wrapper\">\r\n        <Row>\r\n          {isMobile ? (\r\n            <MobileMenu\r\n              iconChild={[<Icon type=\"menu-unfold\" />, <Icon type=\"menu-fold\" />]}\r\n              key=\"mobile-menu\"\r\n              wrapperClassName=\"drawer-wrapper\"\r\n            >\r\n              {menuChild}\r\n            </MobileMenu>\r\n          ) : (\r\n            <Col xxl={4} xl={5} lg={6} md={24} sm={24} xs={24} className=\"main-menu\">\r\n              {menuChild}\r\n            </Col>\r\n          )}\r\n          <Col xxl={20} xl={19} lg={18} md={24} sm={24} xs={24}>\r\n            <div className={mainContainerClass}>\r\n              <Article {...this.props} content={localizedPageData} />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col lg={{ span: 20, offset: 4 }} md={24} sm={24} xs={24}>\r\n            <section className=\"prev-next-nav\">\r\n              {prev ? (\r\n                <a className=\"prev-page\">\r\n                  <Icon className=\"footer-nav-icon-before\" type=\"left\" />\r\n                  {prev.props.children}\r\n                </a>\r\n              ) : null}\r\n              {next ? (\r\n                <a className=\"next-page\">\r\n                  {next.props.children}\r\n                  <Icon className=\"footer-nav-icon-after\" type=\"right\" />\r\n                </a>\r\n              ) : null}\r\n            </section>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport WrapperLayout from '../components/layout';\r\nimport MainContent from '../components/Content/MainContent';\r\nimport { transformerFrontmatter } from '../components/utils';\r\n\r\ninterface IMarkDownFields {\r\n  path: string;\r\n  slug: string;\r\n  modifiedTime: number;\r\n  avatarList: {\r\n    href: string;\r\n    text: string;\r\n    src: string;\r\n  }[];\r\n}\r\nexport interface IFrontmatterData extends IMarkDownFields {\r\n  title: {\r\n    'zh-CN': string;\r\n    'en-US': string;\r\n  };\r\n  time: string;\r\n  toc: string | boolean;\r\n  order: number;\r\n  type: string;\r\n  filename: string;\r\n  subtitle: string;\r\n  path: string;\r\n  disabled: boolean;\r\n  important: boolean;\r\n}\r\n\r\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\r\n\r\nexport interface IGraphqlFrontmatterData extends Omit<IFrontmatterData, 'title'> {\r\n  title: {\r\n    zh_CN: string;\r\n    en_US: string;\r\n  };\r\n}\r\n\r\nexport interface IMarkdownRemarkData {\r\n  html: string;\r\n  tableOfContents: string;\r\n  frontmatter: IGraphqlFrontmatterData;\r\n  fields: IMarkDownFields;\r\n}\r\n\r\nexport interface IAllMarkdownRemarkData {\r\n  edges: {\r\n    node: {\r\n      frontmatter: IGraphqlFrontmatterData;\r\n      fields: IMarkDownFields;\r\n    };\r\n  }[];\r\n}\r\n\r\nexport default function Template({\r\n  data,\r\n  ...rest\r\n}: {\r\n  data: { markdownRemark: IMarkdownRemarkData; allMarkdownRemark: IAllMarkdownRemarkData };\r\n  isMobile: boolean;\r\n  location: {\r\n    pathname: string;\r\n  };\r\n}) {\r\n  const { markdownRemark, allMarkdownRemark } = data;\r\n  const { frontmatter, fields, html, tableOfContents } = markdownRemark;\r\n  const { edges } = allMarkdownRemark;\r\n  const menuList = edges.map(({ node }) => {\r\n    const newFrontmatter = transformerFrontmatter(node.frontmatter);\r\n    return {\r\n      slug: node.fields.slug,\r\n      meta: {\r\n        ...newFrontmatter,\r\n        slug: node.fields.slug,\r\n        filename: node.fields.slug,\r\n      },\r\n      ...newFrontmatter,\r\n      filename: node.fields.path,\r\n    };\r\n  });\r\n  return (\r\n    <WrapperLayout {...rest}>\r\n      <MainContent\r\n        {...rest}\r\n        localizedPageData={{\r\n          meta: {\r\n            ...transformerFrontmatter(frontmatter),\r\n            ...fields,\r\n            filename: fields.slug,\r\n            path: fields.path,\r\n          },\r\n          toc: tableOfContents,\r\n          content: html,\r\n        }}\r\n        menuList={menuList}\r\n      />\r\n    </WrapperLayout>\r\n  );\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query TemplateDocsMarkdown($slug: String!, $type: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      tableOfContents(maxDepth: 2)\r\n      frontmatter {\r\n        title {\r\n          zh_CN\r\n          en_US\r\n        }\r\n        order\r\n        type\r\n      }\r\n      fields {\r\n        path\r\n        slug\r\n        modifiedTime\r\n        avatarList {\r\n          href\r\n          text\r\n          src\r\n        }\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      filter: { fileAbsolutePath: { regex: $type } }\r\n      sort: { fields: [fields___slug, frontmatter___time], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title {\r\n              zh_CN\r\n              en_US\r\n            }\r\n            order\r\n            type\r\n            time\r\n          }\r\n          fields {\r\n            slug\r\n            path\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}